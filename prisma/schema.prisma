generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                  String               @id @default(cuid())
  userName            String               @unique
  name                String
  role                Role                 @default(STUDENT)
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  short               String               @default("")
  grade               String?
  authDetails         AuthDetails?
  toturialCompletions TutorialCompletion[]
  projects            Project[]            @relation("ProjectAccount")

  @@index([userName])
  @@index([role])
}

model AuthDetails {
  id              String  @id @default(cuid())
  accountId       String  @unique
  password        String
  initialPassword String
  account         Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
}

model Project {
  id           String    @id @default(cuid())
  name         String
  description  String
  imageUrl     String
  time         String    @default("7:55-12.55")
  location     String    @default("ASG")
  day          Day       @default(MON)
  minGrade     Int       @default(5)
  maxGrade     Int       @default(11)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  roomId       String?
  emoji        String    @default("ðŸ¤—")
  maxStudents  Int       @default(10)
  price        Float     @default(0)
  room         Room?     @relation(fields: [roomId], references: [id], onDelete: SetNull)
  participants Account[] @relation("ProjectAccount")

  @@index([id])
  @@index([name])
}

model TutorialCompletion {
  id        String   @id @default(cuid())
  accountId String
  createdAt DateTime @default(now())
  tutorial  Tutorial
  account   Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)
}

model Room {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[]
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
  VIP
}

enum Day {
  MON
  TUE
  WED
}

enum Tutorial {
  ABOUT
  FEATURES
}
